#include "simulator.hpp"
#define TYPES FIXED(32, 16),DOUBLE,FLOAT
#define SIZES S(36, 85)
#ifndef TYPES
#error "TYPES is not defined"
#endif
#ifdef SIZES

using Simulator = types::Simulator<types::TypesList<TYPES>, SIZES>;

#else

using Simulator = types::Simulator<types::TypesList<TYPES>>;

#endif

int main(int argc, char **argv) {
    /*if (argc < 4)
    {
        throw std::invalid_argument("Not enought arguments");
    }
    std::unordered_map<std::string, std::string> args;
    for (int i = 0; i < argc; i++)
    {
        std::string tmp = argv[i];
        char *t;
        if (tmp.find("=") != std::string::npos)
        {
            t = strtok(argv[i], "=");
            std::string tmp = t;
            t = strtok(NULL, "=");
            args[tmp] =  std::string(t);
        }
    }*/
    const Simulator simulator = Simulator::from_params(types::SimulationParams{
        .p_type_name      = "FLOAT",//args["--p-type"],
        .v_type_name      = "FLOAT",//args["--v-type"],
        .v_flow_type_name = "FLOAT",//args["--v-flow-type"],
    });
    std::string fl[36] = {
    "####################################################################################",
    "#                                                                                  #",
    "#                                                                                  #",
    "#                                                                                  #",
    "#                                                                                  #",
    "#                                                                                  #",
    "#                                       .........                                  #",
    "#..............#            #           .........                                  #",
    "#..............#            #           .........                                  #",
    "#..............#            #           .........                                  #",
    "#..............#            #                                                      #",
    "#..............#            #                                                      #",
    "#..............#            #                                                      #",
    "#..............#            #                                                      #",
    "#..............#............#                                                      #",
    "#..............#............#                                                      #",
    "#..............#............#                                                      #",
    "#..............#............#                                                      #",
    "#..............#............#                                                      #",
    "#..............#............#                                                      #",
    "#..............#............#                                                      #",
    "#..............#............#                                                      #",
    "#..............#............################                     #                 #",
    "#...........................#....................................#                 #",
    "#...........................#....................................#                 #",
    "#...........................#....................................#                 #",
    "##################################################################                 #",
    "#                                                                                  #",
    "#                                                                                  #",
    "#                                                                                  #",
    "#                                                                                  #",
    "#                                                                                  #",
    "#                                                                                  #",
    "#                                                                                  #",
    "#                                                                                  #",
    "####################################################################################",
    };
    std::vector<std::vector<char>> input;
    for (auto i : fl)
    {
        input.push_back(std::vector<char>());
        for (auto j : i)
        {
            input.back().push_back(j);
        }
    }
    simulator.start_on_field(types::Context{
        .field =
            input,
    });
}

/*{
    {"####################################################################################"},
                {"#                                                                                  #"},
                {"#                                                                                  #"},
                {"#                                                                                  #"},
                {"#                                                                                  #"},
                {"#                                                                                  #"},
                {"#                                       .........                                  #"},
                {"#..............#            #           .........                                  #"},
                {"#..............#            #           .........                                  #"},
                {"#..............#            #           .........                                  #"},
                {"#..............#            #                                                      #"},
                {"#..............#            #                                                      #"},
                {"#..............#            #                                                      #"},
                {"#..............#            #                                                      #"},
                {"#..............#............#                                                      #"},
                {"#..............#............#                                                      #"},
                {"#..............#............#                                                      #"},
                {"#..............#............#                                                      #"},
                {"#..............#............#                                                      #"},
                {"#..............#............#                                                      #"},
                {"#..............#............#                                                      #"},
                {"#..............#............#                                                      #"},
                {"#..............#............################                     #                 #"},
                {"#...........................#....................................#                 #"},
                {"#...........................#....................................#                 #"},
                {"#...........................#....................................#                 #"},
                {"##################################################################                 #"},
                {"#                                                                                  #"},
                {"#                                                                                  #"},
                {"#                                                                                  #"},
                {"#                                                                                  #"},
                {"#                                                                                  #"},
                {"#                                                                                  #"},
                {"#                                                                                  #"},
                {"#                                                                                  #"},
                {"####################################################################################"},
    "####################################################################################",
    };*/